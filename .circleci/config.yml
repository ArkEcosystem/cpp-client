version: 2
jobs:
  build-arduino-default:
    machine: true
    steps:
      - checkout
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Install
          command: ./.circleci/install_arduino.sh
      - run:
          name: Build
          command: ./.circleci/script_arduino.sh
  build-linux-default:
    machine: true
    steps:
      - checkout
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Install
          command: ./.circleci/install_platform_io.sh
      - run:
          name: Build
          command: ./.circleci/script_platform_io.sh
  build-linux-gcc7:
    machine: true
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test 
            sudo apt-get update
            sudo apt-get -y install g++-7 lcov tar make
      - run:
          name: Install OpenSSL
          command:
            wget https://github.com/openssl/openssl/archive/OpenSSL_1_1_1.tar.gz
            tar xr OpenSSL_1_1_1.tar.gz
            cd OpenSSL_1_1_1
            ./config
            make
            sudo make install
      - run:
          name: Install CMake
          command:
            sudo apt-get remove cmake cmake-data
            wget 'https://github.com/Kitware/CMake/releases/download/v3.14.3/cmake-3.14.3.tar.gz'
            tar xf cmake-3.14.3.tar.gz
            cd cmake-3.14.3
            ./configure
            make
            sudo make install
            export PATH=/usr/local/bin:$PATH
            export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Environment variables
          command: CC=gcc-7 && CXX=g++-7
      - run:
          name: Build
          command: ./.circleci/script_desktop.sh
      - run:
          name: Codecov upload
          command: bash <(curl -s https://codecov.io/bash)
  build-linux-clang-5:
    machine: true
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-add-repository -y "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main"
            sudo apt-get update
            sudo apt-get -y install clang-5.0 clang-format-5.0 clang-tidy-5.0 lcov tar make
      - run:
          name: Install OpenSSL
          command:
            wget 'https://github.com/openssl/openssl/archive/OpenSSL_1_1_1.tar.gz'
            tar xf OpenSSL_1_1_1.tar.gz
            cd OpenSSL_1_1_1
            ./config
            make
            sudo make install
      - run:
          name: Install CMake
          command:
            sudo apt-get remove cmake cmake-data
            wget https://github.com/Kitware/CMake/releases/download/v3.14.3/cmake-3.14.3.tar.gz
            tar xf cmake-3.14.3.tar.gz
            cd cmake-3.14.3
            ./configure
            make
            sudo make install
            export PATH=/usr/local/bin:$PATH
            export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Environment variables
          command: CC=clang-5.0 && CXX=clang++-5.0
      - run:
          name: Build
          command: ./.circleci/script_desktop.sh
      - run:
          name: Clang Tidy
          command: ./.circleci/clang_tidy.sh
      - run:
          name: Clang Format
          command: ./.circleci/clang_format.sh
          
  build-macos-9-2:
    macos:
      xcode: "9.2.0"
    steps:
      - checkout
      - run: COMPILER=clang++
      - run:
          name: Install dependencies
          command: brew install cmake lcov
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Build
          command: ./.circleci/script_desktop.sh
  build-macos-9-3:
    macos:
      xcode: "9.3.0"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: brew install cmake lcov
      - run:
          name: Make scripts executable 
          command: sudo chmod -R +x ./.circleci/*.sh
      - run:
          name: Build
          command: ./.circleci/script_desktop.sh

workflows:
  version: 2
  build:
    jobs:
      - build-arduino-default
      - build-linux-default
      - build-linux-gcc7
      - build-linux-clang-5
      - build-macos-9-2
      - build-macos-9-3
